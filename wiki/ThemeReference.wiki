#summary All available theme settings.
#labels Documentation,Featured

<h1>Theme Reference</h1>

<h3>Table of Contents</h3>
<wiki:toc max_depth="3" />

This document explains all the options that are available for creating custom themes. These settings are stored in `settings.ini`

Items marked in *bold* are mandatory.

= {{{General}}} =

General settings

|| *Name* || *Description* || *Example value* || *Note* ||
|| *name* || Name of the theme || Example theme || Has to be the same as the folder name ||
|| *author* || Author of the theme || Jari Y || ||
|| *width* || Theme width in pixels || 1280 || ||
|| *height* || Theme height in pixels || 720 || ||
|| *overlays* || Comma separated list of text overlays || driver,sessionstate,sidepanel || See [ThemeReference#Overlays] ||
|| *images* || Comma separated list of images || logo,sidepanel || See [ThemeReference#Images] ||
|| *tickers* || Comma separated list of tickers || ticker || See [ThemeReference#Tickers] ||
|| *buttons* || Comma separated list of buttons || driver,sessionstate,sidepanel,ticker || See [ThemeReference#Buttons] ||
|| switchsign || Sign used with intervals (-1.456 or +2 laps) || true || Default `false` ||

= {{{Translation}}} =

Program uses a few natural language words in its text fields. These words can be changed in Translation-section.

|| *Name* || *Description* || *Example value* || *Note* ||
||lap|| || || ||
||laps|| || || ||
||minutes|| || || ||
||of|| || || ||
||remaining|| ||to go|| ||
||race|| || || ||
||qualify|| || || ||
||practice|| || || ||
||out|| ||retired||Text shown in user's {interval} when he has quitted||
||gridding|| || || ||
||pacelap|| || || ||
||finallap|| || || ||
||finishing|| || || ||
||leader|| ||-.--||Text shown in leaders {interval}||

= {{{Multiclass}}} =

In this section you can change car names. See [ThemeReference#text].

Format is {{{carname="Car name"}}}. For example:

{{{
c6r=Corvette C6R
radical\sr8=Radical SR8
}}}

= Overlays =

Each of the overlays defined in General-section must have corresponding {{{Overlay-overlayname}}}-section. For example if {{{overlays=driver,sidepanel}}} then there must be {{{[Overlay-driver]}}} and {{{[Overlay-sidepanel]}}}.

|| *Name* || *Description* || *Example value* || *Note* ||
|| *width* || Width of the overlay || 540 || ||
|| *height* || Heigth of the overlay || 80 || ||
|| *left* || Margin from the left border of the window || 64 || ||
|| *top* || Margin from the top border of the window || 582 || ||
|| *zIndex* || Stacking order of all items in the theme || 100 || Item with largest zIndex will be shown top most and vice versa ||
|| *dataset* || The kind of information shown on the text items || followed || Valid values are `followed`, `standing`, `sessionstate` || 
|| *labels* || Comma sparated list of text labels shown inside of the overlay || num,name,diff || ||
|| itemheight || Line height of stanging list || 45 || Applies only to overlays that have dataset as `standing` ||
|| number || Number of items to draw || 10 || Applies only to overlays that have dataset as `standing` ||

== Overlay labels ==

Each of the labels defined in overlay's labels must be defined in its own section. For example {{{labels=name,diff}}} in {{{[Overlay-driver]}}} must then have {{{[Overlay-driver-name]}}} and {{{[Overlay-driver-diff]}}}.

|| *Name* || *Description* || *Example value* || *Note* ||
|| *width* || Object's width in pixels || 400 ||  ||
|| *fontsize* || Font size for the text || 34 ||  ||
|| *text* || Text formatting || {position_ord} || See [ThemeReference#text] ||
|| font || Font used to draw the text || Arial || Can be filename or a font name installed in Windows ^1^ ||
|| fontcolor || Font color for the text || black || [http://samples.msdn.microsoft.com/workshop/samples/author/dhtml/colors/ColorTable.htm See all possible colors] ||
|| fontbold || Font weight for the text || false || true or false ||
|| fontitalic || Font style for the text || `true` or `false` || ||
|| align || Text alignment inside its borders || left || `left`, `right` or `center` ||
|| left || Top-left corner's distance from parent object's left border || 0 || ||
|| top || Top-left corner's distance from parent object's top border || 0 || ||
|| offset || Add offset to shown driver. || -1 || ^2^ ||

^1^ When using filename the file must be on the theme folder. When using just a font name, the font must be installed in Windows' font folder. Valid values are either `arial.ttf` (filename) or `Arial` (installed)

^2^ For example `dataset=followed` and the driver followed is on 3rd place. The using `offset=-1` would show data of the driver on 2nd place and similarly `offset=3` would show data of 5th place driver.

=== {{{text}}} ===

Text property select what information is shown on the overlay. Different datasets have different data available.

==== Dataset: `followed` or `standing` ====

|| *Value* || *Description* || *Example output* || *Note* ||
|| {fullname} || Full name || Greger Huttu || ||
|| {shortname} || Shorter name || G Huttu || ||
|| {initials} || Initials || GHU || ||
|| {license} || License || WC4.99 || ||
|| {club} || Club || Finland || ||
|| {car} || Car || Radical SR8 || See [ThemeReference#Multiclass] ||
|| {class} || Class || N/A || ||
|| {carnum} || Car number || 22 || ||
|| {fastlap} || Fastest lap of the session || 1:23.456 || ||
|| {prevlap} || Lap time of previous finished lap || 1:23.456 || ||
|| {curlap}|| Lap time  of the current unfinished lap || 1:23.456 || ||
|| {lapnum} || Current lap number || 10 ||
|| {speedfast_mph} || Average speed of the fastest lap in miles per hour || 123.45 || ||
|| {speedfast_kph} || Average speed of the fastest lap in kilometers per hour || 123.45 || ||
|| {speedlast_mph} || Average speed of the previous lap in miles per hour || 123.45 || ||
|| {speedlast_kph} || Average speed of the previous lap in kilometers per hour || 123.45 || ||
|| {position} || Current position || 10 || ||
|| {position_ord} || Current position in english ordinal || 3rd || ||
|| {interval} || Difference to leader. In practice/qualify difference of fastest laps, in race time/lap difference || +1.234 || Sign can be switched in {{{[General]}}} ||

==== Dataset: `sessionstate` ====

|| *Value* || *Description* || *Example output* || * Note* ||
|| {lapstotal} || Total laps in session || 32 || ||
|| {lapscompleted} || Laps completed by the leader || 20 || ||
|| {lapsremaining} || Laps remaining in session || 12 || ||
|| {timetotal} || Total elapsed time in session || 30:00 || ||
|| {timepassed} || Total elapsed time in session || 12:33 || ||
|| {timeremaining} || Time remaining in session || 17:27 || ||

= Images =

Each of the images defined in General-section must have corresponding {{{Image-imagename}}}-section. For example if {{{images=driver,sidepanel}}} then there must be {{{[Image-driver]}}} and {{{[Image-sidepanel]}}}.

|| *Value* || *Description* || *Example output* || * Note* ||
|| *filename* || Filename om the image in theme folder || lights-off.png || Available image formats are BMP, JPEG, PNG, TIFF, Windows Media Photo, GIF and ICON. ||
|| *zIndex* || Stacking order of all items in the theme || 10 || Item with largest zIndex will be shown top most and vice versa ||
|| flag || sets image visible when selected flag is set || green || Valid values are `green`, `yellow`, `white` and `checkered` ||
|| light || sets image visible when selected start light is set || green || Valid values are `green`, `red` and `off` ||

= Tickers =

Each of the tickers defined in General-section must have corresponding {{{Ticker-tickername}}}-section. For example if {{{tickers=standings}}} then there must be {{{[Ticker-standings]}}}.

Tickers have the same properties as overlays. See [ThemeReference#Overlays]. There are few additional fields:

|| *Value* || *Description* || *Example output* || * Note* ||
|| fillvertical || Sets the direction which labels are stacked. When `true` it creates multi row ticker. `false` is the normal behavior. || false || Valid values are `true` or `false` ||

= Buttons =

Each of the buttons defined in General-section must have corresponding {{{Button-buttonname}}}-section. For example if {{{buttons=sidepanel,ticker}}} then there must be {{{[Button-sidepanel]}}} and {{{[Button-ticker]}}}.

Buttons show and hide overlays, images and tickers. Each button can do any combination of these.

|| *Value* || *Description* || *Example output* || * Note* ||
|| text || Sets the text shown in the button. || Side panel || ||
|| show || Comma separated list of items that will be visible after button press || Overlay-sidepanel,Image-sidepanel || Valid values are any of the overlays, images or tickers defined in `General`. ^1^ ||
|| hide || Comma separated list of items that will be hidden after button press || Ticker-standings || See `show` ||
|| toggle || Comma separated list of items that will be toggled (visible/hidden) after button press || Oveylay-driver || See `show` ||

^1^ Special note: When using overlay with dataset `standing` use always `show` to switch to the next page. For example 30 drivers will have 3 pages worth of items if `number` is 10.